// Generated by view binder compiler. Do not edit!
package com.lahsuak.sangeetmusicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.imageview.ShapeableImageView;
import com.lahsuak.sangeetmusicplayer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final TextView artistName;

  @NonNull
  public final ImageView btnFavorite;

  @NonNull
  public final ImageView btnPlayingOption;

  @NonNull
  public final ImageView btnPlaylist;

  @NonNull
  public final ImageView btnRecentlyPlayed;

  @NonNull
  public final ImageView btnSort;

  @NonNull
  public final ImageView btnView;

  @NonNull
  public final TextView endTime;

  @NonNull
  public final CoordinatorLayout homeFragment;

  @NonNull
  public final ConstraintLayout moreOptions;

  @NonNull
  public final ImageView next;

  @NonNull
  public final FloatingActionButton play;

  @NonNull
  public final ImageView previous;

  @NonNull
  public final ConstraintLayout recentLayout;

  @NonNull
  public final SeekBar recentSeekbar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final ShapeableImageView songImage;

  @NonNull
  public final TextView songName;

  @NonNull
  public final TextView startTime;

  @NonNull
  public final TextView txtFavourite;

  @NonNull
  public final TextView txtPlayingOption;

  @NonNull
  public final TextView txtPlaylist;

  @NonNull
  public final TextView txtRecentPlayed;

  @NonNull
  public final TextView txtSort;

  @NonNull
  public final TextView txtTotal;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull TextView artistName, @NonNull ImageView btnFavorite,
      @NonNull ImageView btnPlayingOption, @NonNull ImageView btnPlaylist,
      @NonNull ImageView btnRecentlyPlayed, @NonNull ImageView btnSort, @NonNull ImageView btnView,
      @NonNull TextView endTime, @NonNull CoordinatorLayout homeFragment,
      @NonNull ConstraintLayout moreOptions, @NonNull ImageView next,
      @NonNull FloatingActionButton play, @NonNull ImageView previous,
      @NonNull ConstraintLayout recentLayout, @NonNull SeekBar recentSeekbar,
      @NonNull RecyclerView recyclerView, @NonNull ShapeableImageView songImage,
      @NonNull TextView songName, @NonNull TextView startTime, @NonNull TextView txtFavourite,
      @NonNull TextView txtPlayingOption, @NonNull TextView txtPlaylist,
      @NonNull TextView txtRecentPlayed, @NonNull TextView txtSort, @NonNull TextView txtTotal) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.artistName = artistName;
    this.btnFavorite = btnFavorite;
    this.btnPlayingOption = btnPlayingOption;
    this.btnPlaylist = btnPlaylist;
    this.btnRecentlyPlayed = btnRecentlyPlayed;
    this.btnSort = btnSort;
    this.btnView = btnView;
    this.endTime = endTime;
    this.homeFragment = homeFragment;
    this.moreOptions = moreOptions;
    this.next = next;
    this.play = play;
    this.previous = previous;
    this.recentLayout = recentLayout;
    this.recentSeekbar = recentSeekbar;
    this.recyclerView = recyclerView;
    this.songImage = songImage;
    this.songName = songName;
    this.startTime = startTime;
    this.txtFavourite = txtFavourite;
    this.txtPlayingOption = txtPlayingOption;
    this.txtPlaylist = txtPlaylist;
    this.txtRecentPlayed = txtRecentPlayed;
    this.txtSort = txtSort;
    this.txtTotal = txtTotal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.artistName;
      TextView artistName = ViewBindings.findChildViewById(rootView, id);
      if (artistName == null) {
        break missingId;
      }

      id = R.id.btnFavorite;
      ImageView btnFavorite = ViewBindings.findChildViewById(rootView, id);
      if (btnFavorite == null) {
        break missingId;
      }

      id = R.id.btnPlayingOption;
      ImageView btnPlayingOption = ViewBindings.findChildViewById(rootView, id);
      if (btnPlayingOption == null) {
        break missingId;
      }

      id = R.id.btnPlaylist;
      ImageView btnPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (btnPlaylist == null) {
        break missingId;
      }

      id = R.id.btnRecentlyPlayed;
      ImageView btnRecentlyPlayed = ViewBindings.findChildViewById(rootView, id);
      if (btnRecentlyPlayed == null) {
        break missingId;
      }

      id = R.id.btnSort;
      ImageView btnSort = ViewBindings.findChildViewById(rootView, id);
      if (btnSort == null) {
        break missingId;
      }

      id = R.id.btnView;
      ImageView btnView = ViewBindings.findChildViewById(rootView, id);
      if (btnView == null) {
        break missingId;
      }

      id = R.id.endTime;
      TextView endTime = ViewBindings.findChildViewById(rootView, id);
      if (endTime == null) {
        break missingId;
      }

      id = R.id.homeFragment;
      CoordinatorLayout homeFragment = ViewBindings.findChildViewById(rootView, id);
      if (homeFragment == null) {
        break missingId;
      }

      id = R.id.moreOptions;
      ConstraintLayout moreOptions = ViewBindings.findChildViewById(rootView, id);
      if (moreOptions == null) {
        break missingId;
      }

      id = R.id.next;
      ImageView next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.play;
      FloatingActionButton play = ViewBindings.findChildViewById(rootView, id);
      if (play == null) {
        break missingId;
      }

      id = R.id.previous;
      ImageView previous = ViewBindings.findChildViewById(rootView, id);
      if (previous == null) {
        break missingId;
      }

      id = R.id.recent_layout;
      ConstraintLayout recentLayout = ViewBindings.findChildViewById(rootView, id);
      if (recentLayout == null) {
        break missingId;
      }

      id = R.id.recent_seekbar;
      SeekBar recentSeekbar = ViewBindings.findChildViewById(rootView, id);
      if (recentSeekbar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.songImage;
      ShapeableImageView songImage = ViewBindings.findChildViewById(rootView, id);
      if (songImage == null) {
        break missingId;
      }

      id = R.id.songName;
      TextView songName = ViewBindings.findChildViewById(rootView, id);
      if (songName == null) {
        break missingId;
      }

      id = R.id.startTime;
      TextView startTime = ViewBindings.findChildViewById(rootView, id);
      if (startTime == null) {
        break missingId;
      }

      id = R.id.txtFavourite;
      TextView txtFavourite = ViewBindings.findChildViewById(rootView, id);
      if (txtFavourite == null) {
        break missingId;
      }

      id = R.id.txtPlayingOption;
      TextView txtPlayingOption = ViewBindings.findChildViewById(rootView, id);
      if (txtPlayingOption == null) {
        break missingId;
      }

      id = R.id.txtPlaylist;
      TextView txtPlaylist = ViewBindings.findChildViewById(rootView, id);
      if (txtPlaylist == null) {
        break missingId;
      }

      id = R.id.txtRecentPlayed;
      TextView txtRecentPlayed = ViewBindings.findChildViewById(rootView, id);
      if (txtRecentPlayed == null) {
        break missingId;
      }

      id = R.id.txtSort;
      TextView txtSort = ViewBindings.findChildViewById(rootView, id);
      if (txtSort == null) {
        break missingId;
      }

      id = R.id.txtTotal;
      TextView txtTotal = ViewBindings.findChildViewById(rootView, id);
      if (txtTotal == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, appBar, artistName, btnFavorite,
          btnPlayingOption, btnPlaylist, btnRecentlyPlayed, btnSort, btnView, endTime, homeFragment,
          moreOptions, next, play, previous, recentLayout, recentSeekbar, recyclerView, songImage,
          songName, startTime, txtFavourite, txtPlayingOption, txtPlaylist, txtRecentPlayed,
          txtSort, txtTotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
